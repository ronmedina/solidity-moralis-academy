{
	"id": "e2aa4e636b2cee6bae5305ff3ec9966c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownerlist.sol": {
				"content": "pragma solidity 0.8.13;\r\n/**\r\n * @title Ownerlist\r\n * @author Superior Blocks\r\n * @dev List of owner addresses.\r\n */\r\n\r\n\r\n //Inheritance - Parent-child relationships\r\nimport \"./Inheritance_Ownable.sol\";\r\n\r\ncontract Ownerlist is Inheritance_Ownable {\r\n    event OwnerAdded(address owner);\r\n    event OwnerRemoved(address owner);\r\n\r\n    mapping (address => bool) members;\r\n\r\n    constructor() public Inheritance_Ownable() {\r\n    }\r\n\r\n    /**\r\n     * @dev A method to verify whether an address is a owner on the Ownerlist\r\n     * @param _owner The address to verify.\r\n     * @return Whether the address is in the Ownerlist.\r\n     */\r\n    function isOwner(address _owner) public view returns(bool)\r\n    {\r\n        return members[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev A method to add an address to the Ownerlist\r\n     * @param _owner The address to add as a owner.\r\n     */\r\n    function addMember(address _owner)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(\r\n            !isOwner(_owner),\r\n            \"Address is owner already.\"\r\n        );\r\n\r\n        members[_owner] = true;\r\n        emit OwnerAdded(_owner);\r\n    }\r\n\r\n    /**\r\n     * @dev A method to remove a owner from the Ownerlist\r\n     * @param _owner The address to remove as a owner.\r\n     */\r\n    function removeMember(address _owner)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(\r\n            isOwner(_owner),\r\n            \"Not owner of ownerlist.\"\r\n        );\r\n\r\n        delete members[_owner];\r\n        emit OwnerRemoved(_owner);\r\n    }\r\n}"
			},
			"contracts/Inheritance_Ownable.sol": {
				"content": "pragma solidity 0.8.13;\r\n\r\ncontract Inheritance_Ownable{\r\n\r\n    //State variable(s)\r\n    address internal owner; //example using internal instead of private\r\n\r\n    //Modifier(s) is/are for restricting permissions like \"only employees\", \"admins\", or \"owner\" etc...\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);  \r\n        _;\r\n    }\r\n\r\n    // Constructor to initialize var\r\n    constructor(){\r\n        owner = msg.sender; \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Inheritance_Ownable.sol": {
				"Inheritance_Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Inheritance_Ownable.sol\":27:449  contract Inheritance_Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Inheritance_Ownable.sol\":395:446  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Inheritance_Ownable.sol\":427:437  msg.sender */\n  caller\n    /* \"contracts/Inheritance_Ownable.sol\":419:424  owner */\n  0x00\n  dup1\n    /* \"contracts/Inheritance_Ownable.sol\":419:437  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Inheritance_Ownable.sol\":27:449  contract Inheritance_Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Inheritance_Ownable.sol\":27:449  contract Inheritance_Ownable{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220adc0339cdf87ad298bc7782f72f820fb6d894230c7f22a3d4024ca0f2a16b28864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea2646970667358221220adc0339cdf87ad298bc7782f72f820fb6d894230c7f22a3d4024ca0f2a16b28864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC0 CALLER SWAP13 0xDF DUP8 0xAD 0x29 DUP12 0xC7 PUSH25 0x2F72F820FB6D894230C7F22A3D4024CA0F2A16B28864736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "27:422:0:-:0;;;395:51;;;;;;;;;;427:10;419:5;;:18;;;;;;;;;;;;;;;;;;27:422;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220adc0339cdf87ad298bc7782f72f820fb6d894230c7f22a3d4024ca0f2a16b28864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC0 CALLER SWAP13 0xDF DUP8 0xAD 0x29 DUP12 0xC7 PUSH25 0x2F72F820FB6D894230C7F22A3D4024CA0F2A16B28864736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "27:422:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 395,
									"end": 446,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 446,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 395,
									"end": 446,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 395,
									"end": 446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 437,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 419,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 449,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adc0339cdf87ad298bc7782f72f820fb6d894230c7f22a3d4024ca0f2a16b28864736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 449,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Inheritance_Ownable.sol\":\"Inheritance_Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Inheritance_Ownable.sol\":{\"keccak256\":\"0x990d3bea409871331ece76de80c0d51a50519e098a25220ff44d3009125ba190\",\"urls\":[\"bzz-raw://7e225885266c168fe7397ea556820cb4557f28b8b3bd7f9b605f5bd0a292e1d3\",\"dweb:/ipfs/QmPcmj5SUioemLmbNiYhAYQ1zTqXicVfMZMmj86crX64iP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Inheritance_Ownable.sol:Inheritance_Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownerlist.sol": {
				"Ownerlist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "addMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "removeMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addMember(address)": {
								"details": "A method to add an address to the Ownerlist",
								"params": {
									"_owner": "The address to add as a owner."
								}
							},
							"isOwner(address)": {
								"details": "A method to verify whether an address is a owner on the Ownerlist",
								"params": {
									"_owner": "The address to verify."
								},
								"returns": {
									"_0": "Whether the address is in the Ownerlist."
								}
							},
							"removeMember(address)": {
								"details": "A method to remove a owner from the Ownerlist",
								"params": {
									"_owner": "The address to remove as a owner."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownerlist.sol\":206:1530  contract Ownerlist is Inheritance_Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownerlist.sol\":377:428  constructor() public Inheritance_Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Inheritance_Ownable.sol\":427:437  msg.sender */\n  caller\n    /* \"contracts/Inheritance_Ownable.sol\":419:424  owner */\n  0x00\n  dup1\n    /* \"contracts/Inheritance_Ownable.sol\":419:437  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownerlist.sol\":206:1530  contract Ownerlist is Inheritance_Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownerlist.sol\":206:1530  contract Ownerlist is Inheritance_Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b1ca49a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f54bf6e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xca6d56dc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Ownerlist.sol\":1271:1527  function removeMember(address _owner)... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownerlist.sol\":635:740  function isOwner(address _owner) public view returns(bool)... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      tag_12\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownerlist.sol\":876:1130  function addMember(address _owner)... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Ownerlist.sol\":1271:1527  function removeMember(address _owner)... */\n    tag_9:\n        /* \"contracts/Inheritance_Ownable.sol\":321:326  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Inheritance_Ownable.sol\":307:326  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Inheritance_Ownable.sol\":307:317  msg.sender */\n      caller\n        /* \"contracts/Inheritance_Ownable.sol\":307:326  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Inheritance_Ownable.sol\":299:327  require(msg.sender == owner) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"contracts/Ownerlist.sol\":1382:1397  isOwner(_owner) */\n      tag_21\n        /* \"contracts/Ownerlist.sol\":1390:1396  _owner */\n      dup2\n        /* \"contracts/Ownerlist.sol\":1382:1389  isOwner */\n      tag_12\n        /* \"contracts/Ownerlist.sol\":1382:1397  isOwner(_owner) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/Ownerlist.sol\":1360:1448  require(... */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/Ownerlist.sol\":1468:1475  members */\n      0x01\n        /* \"contracts/Ownerlist.sol\":1468:1483  members[_owner] */\n      0x00\n        /* \"contracts/Ownerlist.sol\":1476:1482  _owner */\n      dup3\n        /* \"contracts/Ownerlist.sol\":1468:1483  members[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Ownerlist.sol\":1461:1483  delete members[_owner] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Ownerlist.sol\":1499:1519  OwnerRemoved(_owner) */\n      0x58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da\n        /* \"contracts/Ownerlist.sol\":1512:1518  _owner */\n      dup2\n        /* \"contracts/Ownerlist.sol\":1499:1519  OwnerRemoved(_owner) */\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ownerlist.sol\":1271:1527  function removeMember(address _owner)... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownerlist.sol\":635:740  function isOwner(address _owner) public view returns(bool)... */\n    tag_12:\n        /* \"contracts/Ownerlist.sol\":688:692  bool */\n      0x00\n        /* \"contracts/Ownerlist.sol\":717:724  members */\n      0x01\n        /* \"contracts/Ownerlist.sol\":717:732  members[_owner] */\n      0x00\n        /* \"contracts/Ownerlist.sol\":725:731  _owner */\n      dup4\n        /* \"contracts/Ownerlist.sol\":717:732  members[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Ownerlist.sol\":710:732  return members[_owner] */\n      swap1\n      pop\n        /* \"contracts/Ownerlist.sol\":635:740  function isOwner(address _owner) public view returns(bool)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ownerlist.sol\":876:1130  function addMember(address _owner)... */\n    tag_17:\n        /* \"contracts/Inheritance_Ownable.sol\":321:326  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Inheritance_Ownable.sol\":307:326  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Inheritance_Ownable.sol\":307:317  msg.sender */\n      caller\n        /* \"contracts/Inheritance_Ownable.sol\":307:326  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Inheritance_Ownable.sol\":299:327  require(msg.sender == owner) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"contracts/Ownerlist.sol\":985:1000  isOwner(_owner) */\n      tag_31\n        /* \"contracts/Ownerlist.sol\":993:999  _owner */\n      dup2\n        /* \"contracts/Ownerlist.sol\":985:992  isOwner */\n      tag_12\n        /* \"contracts/Ownerlist.sol\":985:1000  isOwner(_owner) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/Ownerlist.sol\":984:1000  !isOwner(_owner) */\n      iszero\n        /* \"contracts/Ownerlist.sol\":962:1053  require(... */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"contracts/Ownerlist.sol\":1084:1088  true */\n      0x01\n        /* \"contracts/Ownerlist.sol\":1066:1073  members */\n      dup1\n        /* \"contracts/Ownerlist.sol\":1066:1081  members[_owner] */\n      0x00\n        /* \"contracts/Ownerlist.sol\":1074:1080  _owner */\n      dup4\n        /* \"contracts/Ownerlist.sol\":1066:1081  members[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Ownerlist.sol\":1066:1088  members[_owner] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownerlist.sol\":1104:1122  OwnerAdded(_owner) */\n      0x994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3\n        /* \"contracts/Ownerlist.sol\":1115:1121  _owner */\n      dup2\n        /* \"contracts/Ownerlist.sol\":1104:1122  OwnerAdded(_owner) */\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Ownerlist.sol\":876:1130  function addMember(address _owner)... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_37:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_39:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_40:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_57\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_41:\n        /* \"#utility.yul\":641:665   */\n      tag_59\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_60:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_42:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_62\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_65\n      tag_37\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":917:1036   */\n    tag_64:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_66\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_43:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_44:\n        /* \"#utility.yul\":1353:1374   */\n      tag_69\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_43\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_14:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_71\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1772   */\n    tag_45:\n        /* \"#utility.yul\":1687:1698   */\n      0x00\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1716:1719   */\n      dup3\n        /* \"#utility.yul\":1709:1728   */\n      mstore\n        /* \"#utility.yul\":1761:1765   */\n      0x20\n        /* \"#utility.yul\":1756:1759   */\n      dup3\n        /* \"#utility.yul\":1752:1766   */\n      add\n        /* \"#utility.yul\":1737:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1778:1951   */\n    tag_46:\n        /* \"#utility.yul\":1918:1943   */\n      0x4e6f74206f776e6572206f66206f776e65726c6973742e000000000000000000\n        /* \"#utility.yul\":1914:1915   */\n      0x00\n        /* \"#utility.yul\":1906:1912   */\n      dup3\n        /* \"#utility.yul\":1902:1916   */\n      add\n        /* \"#utility.yul\":1895:1944   */\n      mstore\n        /* \"#utility.yul\":1778:1951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2323   */\n    tag_47:\n        /* \"#utility.yul\":2099:2102   */\n      0x00\n        /* \"#utility.yul\":2120:2187   */\n      tag_75\n        /* \"#utility.yul\":2184:2186   */\n      0x17\n        /* \"#utility.yul\":2179:2182   */\n      dup4\n        /* \"#utility.yul\":2120:2187   */\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2113:2187   */\n      swap2\n      pop\n        /* \"#utility.yul\":2196:2289   */\n      tag_76\n        /* \"#utility.yul\":2285:2288   */\n      dup3\n        /* \"#utility.yul\":2196:2289   */\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2309:2312   */\n      dup3\n        /* \"#utility.yul\":2305:2317   */\n      add\n        /* \"#utility.yul\":2298:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2748   */\n    tag_24:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"#utility.yul\":2522:2531   */\n      dup3\n        /* \"#utility.yul\":2518:2536   */\n      add\n        /* \"#utility.yul\":2510:2536   */\n      swap1\n      pop\n        /* \"#utility.yul\":2582:2591   */\n      dup2\n        /* \"#utility.yul\":2576:2580   */\n      dup2\n        /* \"#utility.yul\":2572:2592   */\n      sub\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2557:2566   */\n      dup4\n        /* \"#utility.yul\":2553:2570   */\n      add\n        /* \"#utility.yul\":2546:2593   */\n      mstore\n        /* \"#utility.yul\":2610:2741   */\n      tag_78\n        /* \"#utility.yul\":2736:2740   */\n      dup2\n        /* \"#utility.yul\":2610:2741   */\n      tag_47\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2602:2741   */\n      swap1\n      pop\n        /* \"#utility.yul\":2329:2748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2754:2872   */\n    tag_48:\n        /* \"#utility.yul\":2841:2865   */\n      tag_80\n        /* \"#utility.yul\":2859:2864   */\n      dup2\n        /* \"#utility.yul\":2841:2865   */\n      tag_40\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2836:2839   */\n      dup3\n        /* \"#utility.yul\":2829:2866   */\n      mstore\n        /* \"#utility.yul\":2754:2872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3100   */\n    tag_26:\n        /* \"#utility.yul\":2971:2975   */\n      0x00\n        /* \"#utility.yul\":3009:3011   */\n      0x20\n        /* \"#utility.yul\":2998:3007   */\n      dup3\n        /* \"#utility.yul\":2994:3012   */\n      add\n        /* \"#utility.yul\":2986:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":3022:3093   */\n      tag_82\n        /* \"#utility.yul\":3090:3091   */\n      0x00\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3075:3092   */\n      add\n        /* \"#utility.yul\":3066:3072   */\n      dup5\n        /* \"#utility.yul\":3022:3093   */\n      tag_48\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2878:3100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3281   */\n    tag_49:\n        /* \"#utility.yul\":3246:3273   */\n      0x41646472657373206973206f776e657220616c72656164792e00000000000000\n        /* \"#utility.yul\":3242:3243   */\n      0x00\n        /* \"#utility.yul\":3234:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3244   */\n      add\n        /* \"#utility.yul\":3223:3274   */\n      mstore\n        /* \"#utility.yul\":3106:3281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:3653   */\n    tag_50:\n        /* \"#utility.yul\":3429:3432   */\n      0x00\n        /* \"#utility.yul\":3450:3517   */\n      tag_85\n        /* \"#utility.yul\":3514:3516   */\n      0x19\n        /* \"#utility.yul\":3509:3512   */\n      dup4\n        /* \"#utility.yul\":3450:3517   */\n      tag_45\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3443:3517   */\n      swap2\n      pop\n        /* \"#utility.yul\":3526:3619   */\n      tag_86\n        /* \"#utility.yul\":3615:3618   */\n      dup3\n        /* \"#utility.yul\":3526:3619   */\n      tag_49\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3644:3646   */\n      0x20\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3635:3647   */\n      add\n        /* \"#utility.yul\":3628:3647   */\n      swap1\n      pop\n        /* \"#utility.yul\":3287:3653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:4078   */\n    tag_34:\n        /* \"#utility.yul\":3825:3829   */\n      0x00\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3852:3861   */\n      dup3\n        /* \"#utility.yul\":3848:3866   */\n      add\n        /* \"#utility.yul\":3840:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3912:3921   */\n      dup2\n        /* \"#utility.yul\":3906:3910   */\n      dup2\n        /* \"#utility.yul\":3902:3922   */\n      sub\n        /* \"#utility.yul\":3898:3899   */\n      0x00\n        /* \"#utility.yul\":3887:3896   */\n      dup4\n        /* \"#utility.yul\":3883:3900   */\n      add\n        /* \"#utility.yul\":3876:3923   */\n      mstore\n        /* \"#utility.yul\":3940:4071   */\n      tag_88\n        /* \"#utility.yul\":4066:4070   */\n      dup2\n        /* \"#utility.yul\":3940:4071   */\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3932:4071   */\n      swap1\n      pop\n        /* \"#utility.yul\":3659:4078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220991f8e6d1af7ea333300edf7d623b1de65d08ec6169384362308f867ad1302cd64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061056e806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630b1ca49a146100465780632f54bf6e14610062578063ca6d56dc14610092575b600080fd5b610060600480360381019061005b91906103c2565b6100ae565b005b61007c600480360381019061007791906103c2565b6101d7565b604051610089919061040a565b60405180910390f35b6100ac60048036038101906100a791906103c2565b61022d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461010657600080fd5b61010f816101d7565b61014e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014590610482565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da816040516101cc91906104b1565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028557600080fd5b61028e816101d7565b156102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610518565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c38160405161035491906104b1565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038f82610364565b9050919050565b61039f81610384565b81146103aa57600080fd5b50565b6000813590506103bc81610396565b92915050565b6000602082840312156103d8576103d761035f565b5b60006103e6848285016103ad565b91505092915050565b60008115159050919050565b610404816103ef565b82525050565b600060208201905061041f60008301846103fb565b92915050565b600082825260208201905092915050565b7f4e6f74206f776e6572206f66206f776e65726c6973742e000000000000000000600082015250565b600061046c601783610425565b915061047782610436565b602082019050919050565b6000602082019050818103600083015261049b8161045f565b9050919050565b6104ab81610384565b82525050565b60006020820190506104c660008301846104a2565b92915050565b7f41646472657373206973206f776e657220616c72656164792e00000000000000600082015250565b6000610502601983610425565b915061050d826104cc565b602082019050919050565b60006020820190508181036000830152610531816104f5565b905091905056fea2646970667358221220991f8e6d1af7ea333300edf7d623b1de65d08ec6169384362308f867ad1302cd64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x56E DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F DUP2 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA DUP2 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x1D7 JUMP JUMPDEST ISZERO PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39F DUP2 PUSH2 0x384 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BC DUP2 PUSH2 0x396 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x35F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP5 DUP3 DUP6 ADD PUSH2 0x3AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66206F776E65726C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH1 0x17 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP3 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB DUP2 PUSH2 0x384 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206F776E657220616C72656164792E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502 PUSH1 0x19 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D DUP3 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x531 DUP2 PUSH2 0x4F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x1F DUP15 PUSH14 0x1AF7EA333300EDF7D623B1DE65D0 DUP15 0xC6 AND SWAP4 DUP5 CALLDATASIZE 0x23 ADDMOD 0xF8 PUSH8 0xAD1302CD64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "206:1324:1:-:0;;;377:51;;;;;;;;;;427:10:0;419:5;;:18;;;;;;;;;;;;;;;;;;206:1324:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addMember_87": {
									"entryPoint": 557,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_60": {
									"entryPoint": 471,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeMember_112": {
									"entryPoint": 174,
									"id": 112,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4081:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:2"
															},
															"nodeType": "YulIf",
															"src": "917:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:2",
														"type": ""
													}
												],
												"src": "841:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:2",
														"type": ""
													}
												],
												"src": "1176:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:2",
														"type": ""
													}
												],
												"src": "1272:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:2",
														"type": ""
													}
												],
												"src": "1387:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1716:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1737:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1756:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1737:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1676:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1687:11:2",
														"type": ""
													}
												],
												"src": "1603:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:67:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:14:2"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572206f66206f776e65726c6973742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1918:25:2",
																		"type": "",
																		"value": "Not owner of ownerlist."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1895:49:2"
														}
													]
												},
												"name": "store_literal_in_memory_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1876:6:2",
														"type": ""
													}
												],
												"src": "1778:173:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2103:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2113:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2179:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2184:2:2",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2120:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2113:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2285:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec",
																	"nodeType": "YulIdentifier",
																	"src": "2196:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2196:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2309:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2091:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2099:3:2",
														"type": ""
													}
												],
												"src": "1957:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2500:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2510:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2522:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2533:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2510:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2568:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2576:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2602:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2736:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2610:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2602:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2480:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2495:4:2",
														"type": ""
													}
												],
												"src": "2329:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2819:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2836:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2859:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2841:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2829:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2807:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2814:3:2",
														"type": ""
													}
												],
												"src": "2754:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2976:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2986:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2998:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3009:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2994:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2986:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3066:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3090:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3022:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2948:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2960:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2971:4:2",
														"type": ""
													}
												],
												"src": "2878:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3212:69:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3234:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3242:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3230:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3230:14:2"
																	},
																	{
																		"hexValue": "41646472657373206973206f776e657220616c72656164792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3246:27:2",
																		"type": "",
																		"value": "Address is owner already."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:51:2"
														}
													]
												},
												"name": "store_literal_in_memory_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3204:6:2",
														"type": ""
													}
												],
												"src": "3106:175:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3433:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3443:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3509:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3514:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3450:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3443:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3615:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0",
																	"nodeType": "YulIdentifier",
																	"src": "3526:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3526:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3421:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3429:3:2",
														"type": ""
													}
												],
												"src": "3287:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3830:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3840:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3852:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3863:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3840:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3887:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3898:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3906:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3876:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3876:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3932:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4066:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3940:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3932:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3810:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3825:4:2",
														"type": ""
													}
												],
												"src": "3659:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner of ownerlist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is owner already.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630b1ca49a146100465780632f54bf6e14610062578063ca6d56dc14610092575b600080fd5b610060600480360381019061005b91906103c2565b6100ae565b005b61007c600480360381019061007791906103c2565b6101d7565b604051610089919061040a565b60405180910390f35b6100ac60048036038101906100a791906103c2565b61022d565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461010657600080fd5b61010f816101d7565b61014e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014590610482565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690557f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da816040516101cc91906104b1565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028557600080fd5b61028e816101d7565b156102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c590610518565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c38160405161035491906104b1565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038f82610364565b9050919050565b61039f81610384565b81146103aa57600080fd5b50565b6000813590506103bc81610396565b92915050565b6000602082840312156103d8576103d761035f565b5b60006103e6848285016103ad565b91505092915050565b60008115159050919050565b610404816103ef565b82525050565b600060208201905061041f60008301846103fb565b92915050565b600082825260208201905092915050565b7f4e6f74206f776e6572206f66206f776e65726c6973742e000000000000000000600082015250565b600061046c601783610425565b915061047782610436565b602082019050919050565b6000602082019050818103600083015261049b8161045f565b9050919050565b6104ab81610384565b82525050565b60006020820190506104c660008301846104a2565b92915050565b7f41646472657373206973206f776e657220616c72656164792e00000000000000600082015250565b6000610502601983610425565b915061050d826104cc565b602082019050919050565b60006020820190508181036000830152610531816104f5565b905091905056fea2646970667358221220991f8e6d1af7ea333300edf7d623b1de65d08ec6169384362308f867ad1302cd64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F DUP2 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145 SWAP1 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0x58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA DUP2 PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28E DUP2 PUSH2 0x1D7 JUMP JUMPDEST ISZERO PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x364 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39F DUP2 PUSH2 0x384 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BC DUP2 PUSH2 0x396 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D8 JUMPI PUSH2 0x3D7 PUSH2 0x35F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E6 DUP5 DUP3 DUP6 ADD PUSH2 0x3AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x404 DUP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66206F776E65726C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C PUSH1 0x17 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP3 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49B DUP2 PUSH2 0x45F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AB DUP2 PUSH2 0x384 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206F776E657220616C72656164792E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502 PUSH1 0x19 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x50D DUP3 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x531 DUP2 PUSH2 0x4F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x1F DUP15 PUSH14 0x1AF7EA333300EDF7D623B1DE65D0 DUP15 0xC6 AND SWAP4 DUP5 CALLDATASIZE 0x23 ADDMOD 0xF8 PUSH8 0xAD1302CD64736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "206:1324:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;635:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1271:256;321:5:0;;;;;;;;;;307:19;;:10;:19;;;299:28;;;;;;1382:15:1::1;1390:6;1382:7;:15::i;:::-;1360:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:7;:15;1476:6;1468:15;;;;;;;;;;;;;;;;1461:22;;;;;;;;;;;1499:20;1512:6;1499:20;;;;;;:::i;:::-;;;;;;;;1271:256:::0;:::o;635:105::-;688:4;717:7;:15;725:6;717:15;;;;;;;;;;;;;;;;;;;;;;;;;710:22;;635:105;;;:::o;876:254::-;321:5:0;;;;;;;;;;307:19;;:10;:19;;;299:28;;;;;;985:15:1::1;993:6;985:7;:15::i;:::-;984:16;962:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1084:4;1066:7:::0;:15:::1;1074:6;1066:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1104:18;1115:6;1104:18;;;;;;:::i;:::-;;;;;;;;876:254:::0;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:169::-;1687:11;1721:6;1716:3;1709:19;1761:4;1756:3;1752:14;1737:29;;1603:169;;;;:::o;1778:173::-;1918:25;1914:1;1906:6;1902:14;1895:49;1778:173;:::o;1957:366::-;2099:3;2120:67;2184:2;2179:3;2120:67;:::i;:::-;2113:74;;2196:93;2285:3;2196:93;:::i;:::-;2314:2;2309:3;2305:12;2298:19;;1957:366;;;:::o;2329:419::-;2495:4;2533:2;2522:9;2518:18;2510:26;;2582:9;2576:4;2572:20;2568:1;2557:9;2553:17;2546:47;2610:131;2736:4;2610:131;:::i;:::-;2602:139;;2329:419;;;:::o;2754:118::-;2841:24;2859:5;2841:24;:::i;:::-;2836:3;2829:37;2754:118;;:::o;2878:222::-;2971:4;3009:2;2998:9;2994:18;2986:26;;3022:71;3090:1;3079:9;3075:17;3066:6;3022:71;:::i;:::-;2878:222;;;;:::o;3106:175::-;3246:27;3242:1;3234:6;3230:14;3223:51;3106:175;:::o;3287:366::-;3429:3;3450:67;3514:2;3509:3;3450:67;:::i;:::-;3443:74;;3526:93;3615:3;3526:93;:::i;:::-;3644:2;3639:3;3635:12;3628:19;;3287:366;;;:::o;3659:419::-;3825:4;3863:2;3852:9;3848:18;3840:26;;3912:9;3906:4;3902:20;3898:1;3887:9;3883:17;3876:47;3940:131;4066:4;3940:131;:::i;:::-;3932:139;;3659:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "278000",
								"executionCost": "24584",
								"totalCost": "302584"
							},
							"external": {
								"addMember(address)": "infinite",
								"isOwner(address)": "2883",
								"removeMember(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 428,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 377,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 427,
									"end": 437,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 419,
									"end": 424,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 419,
									"end": 424,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 419,
									"end": 437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1530,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220991f8e6d1af7ea333300edf7d623b1de65d08ec6169384362308f867ad1302cd64736f6c634300080d0033",
									".code": [
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "B1CA49A"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "2F54BF6E"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "CA6D56DC"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 206,
											"end": 1530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1382,
											"end": 1397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1397,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1382,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1360,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1483,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "58619076ADF5BB0943D100EF88D52D7C3FD691B19D3A9071B555B651FBF418DA"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1519,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 688,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 717,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 717,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 710,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 710,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 321,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 299,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 299,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 993,
											"end": 999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 985,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 985,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 985,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 962,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1088,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "994A936646FE87FFE4F1E469D3D6AA417D6B855598397F323DE5B449F765F0C3"
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1122,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1943,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F74206F776E6572206F66206F776E65726C6973742E000000000000000000"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1951,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2120,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2285,
											"end": 2288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2196,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2323,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2592,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2593,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2610,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2741,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2741,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2748,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2859,
											"end": 2864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 3012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3092,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3022,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 3100,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3106,
											"end": 3281,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3106,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3246,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "41646472657373206973206F776E657220616C72656164792E00000000000000"
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3514,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3509,
											"end": 3512,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3450,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3450,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3615,
											"end": 3618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3526,
											"end": 3619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3619,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3526,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3653,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3922,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3940,
											"end": 4071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 4071,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3940,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 4071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 4071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 4078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addMember(address)": "ca6d56dc",
							"isOwner(address)": "2f54bf6e",
							"removeMember(address)": "0b1ca49a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addMember(address)\":{\"details\":\"A method to add an address to the Ownerlist\",\"params\":{\"_owner\":\"The address to add as a owner.\"}},\"isOwner(address)\":{\"details\":\"A method to verify whether an address is a owner on the Ownerlist\",\"params\":{\"_owner\":\"The address to verify.\"},\"returns\":{\"_0\":\"Whether the address is in the Ownerlist.\"}},\"removeMember(address)\":{\"details\":\"A method to remove a owner from the Ownerlist\",\"params\":{\"_owner\":\"The address to remove as a owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownerlist.sol\":\"Ownerlist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Inheritance_Ownable.sol\":{\"keccak256\":\"0x990d3bea409871331ece76de80c0d51a50519e098a25220ff44d3009125ba190\",\"urls\":[\"bzz-raw://7e225885266c168fe7397ea556820cb4557f28b8b3bd7f9b605f5bd0a292e1d3\",\"dweb:/ipfs/QmPcmj5SUioemLmbNiYhAYQ1zTqXicVfMZMmj86crX64iP\"]},\"contracts/Ownerlist.sol\":{\"keccak256\":\"0x8be8cbfc588a4ad884e94d2dd58a22683c23b25d12d89ffd0ed53b588c23de14\",\"urls\":[\"bzz-raw://d0d86c80b72ac06421ab8fb2fd7b7edcf296f048f31575bb43c00a904c98f5e2\",\"dweb:/ipfs/QmR2iP5DH6PUa2hpE4wLRcRs854BLzuKs64BzDosfW1EZo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Ownerlist.sol:Ownerlist",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 41,
								"contract": "contracts/Ownerlist.sol:Ownerlist",
								"label": "members",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Inheritance_Ownable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Inheritance_Ownable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Ownerlist.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Ownerlist.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Ownerlist.sol:18:5:\n   |\n18 |     constructor() public Inheritance_Ownable() {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 428,
					"file": "contracts/Ownerlist.sol",
					"start": 377
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Inheritance_Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Inheritance_Ownable.sol",
					"exportedSymbols": {
						"Inheritance_Ownable": [
							24
						]
					},
					"id": 25,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Inheritance_Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Inheritance_Ownable",
							"nameLocation": "36:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "106:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "89:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "89:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "288:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "307:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 8,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "321:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "307:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "299:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "299:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "299:28:0"
											},
											{
												"id": 12,
												"nodeType": "PlaceholderStatement",
												"src": "340:1:0"
											}
										]
									},
									"id": 14,
									"name": "onlyOwner",
									"nameLocation": "278:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "288:0:0"
									},
									"src": "269:80:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "408:38:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "419:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "427:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "427:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "419:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "419:18:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:0"
									},
									"scope": 24,
									"src": "395:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 25,
							"src": "27:422:0",
							"usedErrors": []
						}
					],
					"src": "0:449:0"
				},
				"id": 0
			},
			"contracts/Ownerlist.sol": {
				"ast": {
					"absolutePath": "contracts/Ownerlist.sol",
					"exportedSymbols": {
						"Inheritance_Ownable": [
							24
						],
						"Ownerlist": [
							113
						]
					},
					"id": 114,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/Inheritance_Ownable.sol",
							"file": "./Inheritance_Ownable.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 25,
							"src": "167:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Inheritance_Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "228:19:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "228:19:1"
								}
							],
							"canonicalName": "Ownerlist",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113,
								24
							],
							"name": "Ownerlist",
							"nameLocation": "215:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3",
									"id": 33,
									"name": "OwnerAdded",
									"nameLocation": "261:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "280:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "272:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:15:1"
									},
									"src": "255:32:1"
								},
								{
									"anonymous": false,
									"eventSelector": "58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da",
									"id": 37,
									"name": "OwnerRemoved",
									"nameLocation": "299:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "320:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "312:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:1"
									},
									"src": "293:34:1"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "361:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 113,
									"src": "335:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 40,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "335:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 39,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "355:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "420:8:1",
										"statements": []
									},
									"id": 47,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 44,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 43,
												"name": "Inheritance_Ownable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "398:19:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "398:21:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "420:0:1"
									},
									"scope": 113,
									"src": "377:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "699:41:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 55,
														"name": "members",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "717:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 57,
													"indexExpression": {
														"id": 56,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "725:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "717:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 58,
												"nodeType": "Return",
												"src": "710:22:1"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "436:193:1",
										"text": " @dev A method to verify whether an address is a owner on the Ownerlist\n @param _owner The address to verify.\n @return Whether the address is in the Ownerlist."
									},
									"functionSelector": "2f54bf6e",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "644:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:16:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "688:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "688:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:6:1"
									},
									"scope": 113,
									"src": "635:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "951:179:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "984:16:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 70,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "993:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 69,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "985:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "985:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206973206f776e657220616c72656164792e",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1015:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0",
																"typeString": "literal_string \"Address is owner already.\""
															},
															"value": "Address is owner already."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cc54ec7f81a6b87c5041200775c70c7fff3ea6f32f788664e0b42bdaa1981b0",
																"typeString": "literal_string \"Address is owner already.\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "962:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "962:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "962:91:1"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 76,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1066:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 78,
														"indexExpression": {
															"id": 77,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1074:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1066:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1084:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1066:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1066:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 83,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1115:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "OwnerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1104:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1104:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "EmitStatement",
												"src": "1099:23:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "748:122:1",
										"text": " @dev A method to add an address to the Ownerlist\n @param _owner The address to add as a owner."
									},
									"functionSelector": "ca6d56dc",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "936:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "936:9:1"
										}
									],
									"name": "addMember",
									"nameLocation": "885:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "903:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "895:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:16:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:1"
									},
									"scope": 113,
									"src": "876:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1349:178:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 97,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1390:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 96,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "1382:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1382:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572206f66206f776e65726c6973742e",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1412:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec",
																"typeString": "literal_string \"Not owner of ownerlist.\""
															},
															"value": "Not owner of ownerlist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dced9904cd9e37a34b50cfcb0d047fba38aaa3264ee1916734a83836fbc719ec",
																"typeString": "literal_string \"Not owner of ownerlist.\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1360:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:88:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1360:88:1"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1461:22:1",
													"subExpression": {
														"baseExpression": {
															"id": 102,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 104,
														"indexExpression": {
															"id": 103,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1476:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1468:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1461:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 108,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1512:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 107,
														"name": "OwnerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1499:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1499:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "EmitStatement",
												"src": "1494:25:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "1138:127:1",
										"text": " @dev A method to remove a owner from the Ownerlist\n @param _owner The address to remove as a owner."
									},
									"functionSelector": "0b1ca49a",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "1334:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1334:9:1"
										}
									],
									"name": "removeMember",
									"nameLocation": "1280:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1301:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1293:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:16:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:0:1"
									},
									"scope": 113,
									"src": "1271:256:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 114,
							"src": "206:1324:1",
							"usedErrors": []
						}
					],
					"src": "0:1530:1"
				},
				"id": 1
			}
		}
	}
}