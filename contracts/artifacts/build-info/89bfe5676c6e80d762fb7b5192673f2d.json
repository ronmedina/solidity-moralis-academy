{
	"id": "89bfe5676c6e80d762fb7b5192673f2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestruct_TestStorage.sol": {
				"content": "pragma solidity 0.8.13;\r\n\r\ncontract Storage {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestruct_TestStorage.sol": {
				"Storage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestruct_TestStorage.sol\":27:54  contract Storage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestruct_TestStorage.sol\":27:54  contract Storage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a63b96de55a6746ca66405b29e4e1a39e1a361c8eb2c651a7ed6b177d661f6b364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a63b96de55a6746ca66405b29e4e1a39e1a361c8eb2c651a7ed6b177d661f6b364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 EXTCODESIZE SWAP7 0xDE SSTORE 0xA6 PUSH21 0x6CA66405B29E4E1A39E1A361C8EB2C651A7ED6B177 0xD6 PUSH2 0xF6B3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a63b96de55a6746ca66405b29e4e1a39e1a361c8eb2c651a7ed6b177d661f6b364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 EXTCODESIZE SWAP7 0xDE SSTORE 0xA6 PUSH21 0x6CA66405B29E4E1A39E1A361C8EB2C651A7ED6B177 0xD6 PUSH2 0xF6B3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "27:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a63b96de55a6746ca66405b29e4e1a39e1a361c8eb2c651a7ed6b177d661f6b364736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestruct_TestStorage.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SelfDestruct_TestStorage.sol\":{\"keccak256\":\"0x9d9ba60d4d422b758abbe6983b9e952aed4c9045f90815e246ecd932cffeb581\",\"urls\":[\"bzz-raw://a05cc8d489e440bf7909aafd3c49a0dcfa49e03651794b8da8b9b5f011893f53\",\"dweb:/ipfs/QmfYcBUqAZwmAhxdeRPYVgYTQqcMLsEJRSg6GrqCxCCYsb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/SelfDestruct_TestStorage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/SelfDestruct_TestStorage.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SelfDestruct_TestStorage.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestruct_TestStorage.sol",
					"exportedSymbols": {
						"Storage": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Storage",
							"nameLocation": "36:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:27:0",
							"usedErrors": []
						}
					],
					"src": "0:54:0"
				},
				"id": 0
			}
		}
	}
}