{
	"id": "105ef4a9b9fe2d3d8f7adbb20e325835",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Memory_And_Storage.sol": {
				"content": "pragma solidity 0.8.13;\r\n\r\ncontract MemoryAndStorage {\r\n\r\n    uint balance;\r\n\r\n    mapping(uint => User) users;\r\n\r\n    struct User{\r\n        uint id;\r\n        uint balance;\r\n    }\r\n\r\n    function addUser(uint id, uint balance) public {\r\n        users[id] = User(id, balance);\r\n    }\r\n\r\n    function updateBalance(uint id, uint balance) public {\r\n         User memory user = users[id];\r\n         user.balance = balance;\r\n    }\r\n\r\n    function getBalance(uint id) view public returns (uint) {\r\n        return users[id].balance;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Memory_And_Storage.sol": {
				"MemoryAndStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "addUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "updateBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Memory_And_Storage.sol\":27:537  contract MemoryAndStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Memory_And_Storage.sol\":27:537  contract MemoryAndStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1e010439\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x58453fef\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe00c04ac\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Memory_And_Storage.sol\":433:532  function getBalance(uint id) view public returns (uint) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Memory_And_Storage.sol\":290:425  function updateBalance(uint id, uint balance) public {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Memory_And_Storage.sol\":187:282  function addUser(uint id, uint balance) public {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Memory_And_Storage.sol\":433:532  function getBalance(uint id) view public returns (uint) {... */\n    tag_9:\n        /* \"contracts/Memory_And_Storage.sol\":483:487  uint */\n      0x00\n        /* \"contracts/Memory_And_Storage.sol\":507:512  users */\n      0x01\n        /* \"contracts/Memory_And_Storage.sol\":507:516  users[id] */\n      0x00\n        /* \"contracts/Memory_And_Storage.sol\":513:515  id */\n      dup4\n        /* \"contracts/Memory_And_Storage.sol\":507:516  users[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Memory_And_Storage.sol\":507:524  users[id].balance */\n      0x01\n      add\n      sload\n        /* \"contracts/Memory_And_Storage.sol\":500:524  return users[id].balance */\n      swap1\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":433:532  function getBalance(uint id) view public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Memory_And_Storage.sol\":290:425  function updateBalance(uint id, uint balance) public {... */\n    tag_15:\n        /* \"contracts/Memory_And_Storage.sol\":355:371  User memory user */\n      0x00\n        /* \"contracts/Memory_And_Storage.sol\":374:379  users */\n      0x01\n        /* \"contracts/Memory_And_Storage.sol\":374:383  users[id] */\n      0x00\n        /* \"contracts/Memory_And_Storage.sol\":380:382  id */\n      dup5\n        /* \"contracts/Memory_And_Storage.sol\":374:383  users[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Memory_And_Storage.sol\":355:383  User memory user = users[id] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":410:417  balance */\n      dup2\n        /* \"contracts/Memory_And_Storage.sol\":395:399  user */\n      dup2\n        /* \"contracts/Memory_And_Storage.sol\":395:407  user.balance */\n      0x20\n      add\n        /* \"contracts/Memory_And_Storage.sol\":395:417  user.balance = balance */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":343:425  {... */\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":290:425  function updateBalance(uint id, uint balance) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Memory_And_Storage.sol\":187:282  function addUser(uint id, uint balance) public {... */\n    tag_18:\n        /* \"contracts/Memory_And_Storage.sol\":257:274  User(id, balance) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Memory_And_Storage.sol\":262:264  id */\n      dup4\n        /* \"contracts/Memory_And_Storage.sol\":257:274  User(id, balance) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Memory_And_Storage.sol\":266:273  balance */\n      dup3\n        /* \"contracts/Memory_And_Storage.sol\":257:274  User(id, balance) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":245:250  users */\n      0x01\n        /* \"contracts/Memory_And_Storage.sol\":245:254  users[id] */\n      0x00\n        /* \"contracts/Memory_And_Storage.sol\":251:253  id */\n      dup5\n        /* \"contracts/Memory_And_Storage.sol\":245:254  users[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Memory_And_Storage.sol\":245:274  users[id] = User(id, balance) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/Memory_And_Storage.sol\":187:282  function addUser(uint id, uint balance) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_23:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_25:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_26:\n        /* \"#utility.yul\":490:514   */\n      tag_35\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_25\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_36:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_27:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_38\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_26\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_41\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":766:885   */\n    tag_40:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_42\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_27\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_28:\n        /* \"#utility.yul\":1112:1136   */\n      tag_44\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_46\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_28\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1851   */\n    tag_14:\n        /* \"#utility.yul\":1445:1451   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup1\n        /* \"#utility.yul\":1502:1504   */\n      0x40\n        /* \"#utility.yul\":1490:1499   */\n      dup4\n        /* \"#utility.yul\":1481:1488   */\n      dup6\n        /* \"#utility.yul\":1477:1500   */\n      sub\n        /* \"#utility.yul\":1473:1505   */\n      slt\n        /* \"#utility.yul\":1470:1589   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1508:1587   */\n      tag_49\n      tag_23\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1470:1589   */\n    tag_48:\n        /* \"#utility.yul\":1628:1629   */\n      0x00\n        /* \"#utility.yul\":1653:1706   */\n      tag_50\n        /* \"#utility.yul\":1698:1705   */\n      dup6\n        /* \"#utility.yul\":1689:1695   */\n      dup3\n        /* \"#utility.yul\":1678:1687   */\n      dup7\n        /* \"#utility.yul\":1674:1696   */\n      add\n        /* \"#utility.yul\":1653:1706   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1643:1706   */\n      swap3\n      pop\n        /* \"#utility.yul\":1599:1716   */\n      pop\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1781:1834   */\n      tag_51\n        /* \"#utility.yul\":1826:1833   */\n      dup6\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup7\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_27\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1771:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1726:1844   */\n      pop\n        /* \"#utility.yul\":1377:1851   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202da9868fd202c7a628b1090b50159bcd24d8f5eb1c0e23b6dee59b881f80a67464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061025e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631e0104391461004657806358453fef14610076578063e00c04ac14610092575b600080fd5b610060600480360381019061005b9190610191565b6100ae565b60405161006d91906101cd565b60405180910390f35b610090600480360381019061008b91906101e8565b6100ce565b005b6100ac60048036038101906100a791906101e8565b610113565b005b600060016000838152602001908152602001600020600101549050919050565b60006001600084815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905081816020018181525050505050565b6040518060400160405280838152602001828152506001600084815260200190815260200160002060008201518160000155602082015181600101559050505050565b600080fd5b6000819050919050565b61016e8161015b565b811461017957600080fd5b50565b60008135905061018b81610165565b92915050565b6000602082840312156101a7576101a6610156565b5b60006101b58482850161017c565b91505092915050565b6101c78161015b565b82525050565b60006020820190506101e260008301846101be565b92915050565b600080604083850312156101ff576101fe610156565b5b600061020d8582860161017c565b925050602061021e8582860161017c565b915050925092905056fea26469706673582212202da9868fd202c7a628b1090b50159bcd24d8f5eb1c0e23b6dee59b881f80a67464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E010439 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x58453FEF EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE00C04AC EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0x15B JUMP JUMPDEST DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B DUP2 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1A6 PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B5 DUP5 DUP3 DUP6 ADD PUSH2 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D DUP6 DUP3 DUP7 ADD PUSH2 0x17C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E DUP6 DUP3 DUP7 ADD PUSH2 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xA9 DUP7 DUP16 0xD2 MUL 0xC7 0xA6 0x28 0xB1 MULMOD SIGNEXTEND POP ISZERO SWAP12 0xCD 0x24 0xD8 CREATE2 0xEB SHR 0xE 0x23 0xB6 0xDE 0xE5 SWAP12 DUP9 0x1F DUP1 0xA6 PUSH21 0x64736F6C634300080D003300000000000000000000 ",
							"sourceMap": "27:510:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addUser_30": {
									"entryPoint": 275,
									"id": 30,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBalance_64": {
									"entryPoint": 174,
									"id": 64,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateBalance_51": {
									"entryPoint": 206,
									"id": 51,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1854:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1460:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1506:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1508:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1508:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1481:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:32:1"
															},
															"nodeType": "YulIf",
															"src": "1470:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1599:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1614:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1628:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1618:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1643:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1678:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1674:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1698:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1653:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1643:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1726:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1771:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1433:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1445:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1453:6:1",
														"type": ""
													}
												],
												"src": "1377:474:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631e0104391461004657806358453fef14610076578063e00c04ac14610092575b600080fd5b610060600480360381019061005b9190610191565b6100ae565b60405161006d91906101cd565b60405180910390f35b610090600480360381019061008b91906101e8565b6100ce565b005b6100ac60048036038101906100a791906101e8565b610113565b005b600060016000838152602001908152602001600020600101549050919050565b60006001600084815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905081816020018181525050505050565b6040518060400160405280838152602001828152506001600084815260200190815260200160002060008201518160000155602082015181600101559050505050565b600080fd5b6000819050919050565b61016e8161015b565b811461017957600080fd5b50565b60008135905061018b81610165565b92915050565b6000602082840312156101a7576101a6610156565b5b60006101b58482850161017c565b91505092915050565b6101c78161015b565b82525050565b60006020820190506101e260008301846101be565b92915050565b600080604083850312156101ff576101fe610156565b5b600061020d8582860161017c565b925050602061021e8582860161017c565b915050925092905056fea26469706673582212202da9868fd202c7a628b1090b50159bcd24d8f5eb1c0e23b6dee59b881f80a67464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E010439 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x58453FEF EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE00C04AC EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0x15B JUMP JUMPDEST DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18B DUP2 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1A6 PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B5 DUP5 DUP3 DUP6 ADD PUSH2 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x156 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D DUP6 DUP3 DUP7 ADD PUSH2 0x17C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21E DUP6 DUP3 DUP7 ADD PUSH2 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xA9 DUP7 DUP16 0xD2 MUL 0xC7 0xA6 0x28 0xB1 MULMOD SIGNEXTEND POP ISZERO SWAP12 0xCD 0x24 0xD8 CREATE2 0xEB SHR 0xE 0x23 0xB6 0xDE 0xE5 SWAP12 DUP9 0x1F DUP1 0xA6 PUSH21 0x64736F6C634300080D003300000000000000000000 ",
							"sourceMap": "27:510:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;187:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;433:99;483:4;507:5;:9;513:2;507:9;;;;;;;;;;;:17;;;500:24;;433:99;;;:::o;290:135::-;355:16;374:5;:9;380:2;374:9;;;;;;;;;;;355:28;;;;;;;;;;;;;;;;;;;;;;;;;;;410:7;395:4;:12;;:22;;;;;343:82;290:135;;:::o;187:95::-;257:17;;;;;;;;262:2;257:17;;;;266:7;257:17;;;245:5;:9;251:2;245:9;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;187:95;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "121200",
								"executionCost": "165",
								"totalCost": "121365"
							},
							"external": {
								"addUser(uint256,uint256)": "infinite",
								"getBalance(uint256)": "infinite",
								"updateBalance(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 537,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 537,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202da9868fd202c7a628b1090b50159bcd24d8f5eb1c0e23b6dee59b881f80a67464736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "1E010439"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "58453FEF"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "E00C04AC"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 483,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 507,
											"end": 524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 532,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 395,
											"end": 417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 395,
											"end": 417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 290,
											"end": 425,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 257,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 266,
											"end": 273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 257,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addUser(uint256,uint256)": "e00c04ac",
							"getBalance(uint256)": "1e010439",
							"updateBalance(uint256,uint256)": "58453fef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Memory_And_Storage.sol\":\"MemoryAndStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Memory_And_Storage.sol\":{\"keccak256\":\"0xab7bfe785f60a05ae5a5837868decb64f785792852a0c4cb2f0deb79646a2f3f\",\"urls\":[\"bzz-raw://dcb8cfbbc378c067d1f49dbd495710f5ba21748149474700c9691290da0887e2\",\"dweb:/ipfs/QmVvmtN8QpWbKXFuTG4VHLCtSdk7QxoFS6haYm37Tbghgm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Memory_And_Storage.sol:MemoryAndStorage",
								"label": "balance",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/Memory_And_Storage.sol:MemoryAndStorage",
								"label": "users",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(User)13_storage)"
							}
						],
						"types": {
							"t_mapping(t_uint256,t_struct(User)13_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MemoryAndStorage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)13_storage"
							},
							"t_struct(User)13_storage": {
								"encoding": "inplace",
								"label": "struct MemoryAndStorage.User",
								"members": [
									{
										"astId": 10,
										"contract": "contracts/Memory_And_Storage.sol:MemoryAndStorage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "contracts/Memory_And_Storage.sol:MemoryAndStorage",
										"label": "balance",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Memory_And_Storage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Memory_And_Storage.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/Memory_And_Storage.sol:14:31:\n   |\n14 |     function addUser(uint id, uint balance) public {\n   |                               ^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n --> contracts/Memory_And_Storage.sol:5:5:\n  |\n5 |     uint balance;\n  |     ^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 74,
						"file": "contracts/Memory_And_Storage.sol",
						"message": "The shadowed declaration is here:",
						"start": 62
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 225,
					"file": "contracts/Memory_And_Storage.sol",
					"start": 213
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/Memory_And_Storage.sol:18:37:\n   |\n18 |     function updateBalance(uint id, uint balance) public {\n   |                                     ^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n --> contracts/Memory_And_Storage.sol:5:5:\n  |\n5 |     uint balance;\n  |     ^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 74,
						"file": "contracts/Memory_And_Storage.sol",
						"message": "The shadowed declaration is here:",
						"start": 62
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 334,
					"file": "contracts/Memory_And_Storage.sol",
					"start": 322
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/Memory_And_Storage.sol:18:5:\n   |\n18 |     function updateBalance(uint id, uint balance) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 425,
					"file": "contracts/Memory_And_Storage.sol",
					"start": 290
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Memory_And_Storage.sol": {
				"ast": {
					"absolutePath": "contracts/Memory_And_Storage.sol",
					"exportedSymbols": {
						"MemoryAndStorage": [
							65
						]
					},
					"id": 66,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MemoryAndStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 65,
							"linearizedBaseContracts": [
								65
							],
							"name": "MemoryAndStorage",
							"nameLocation": "36:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "67:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 65,
									"src": "62:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "62:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "105:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 65,
									"src": "83:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$13_storage_$",
										"typeString": "mapping(uint256 => struct MemoryAndStorage.User)"
									},
									"typeName": {
										"id": 7,
										"keyType": {
											"id": 4,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "91:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "83:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$13_storage_$",
											"typeString": "mapping(uint256 => struct MemoryAndStorage.User)"
										},
										"valueType": {
											"id": 6,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 5,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 13,
												"src": "99:4:0"
											},
											"referencedDeclaration": 13,
											"src": "99:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$13_storage_ptr",
												"typeString": "struct MemoryAndStorage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "MemoryAndStorage.User",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "146:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "141:7:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "141:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "164:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "159:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "159:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "126:4:0",
									"nodeType": "StructDefinition",
									"scope": 65,
									"src": "119:60:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "234:48:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 20,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$13_storage_$",
																"typeString": "mapping(uint256 => struct MemoryAndStorage.User storage ref)"
															}
														},
														"id": 22,
														"indexExpression": {
															"id": 21,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "251:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "245:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$13_storage",
															"typeString": "struct MemoryAndStorage.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 24,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "262:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 25,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "266:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 23,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "257:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$13_storage_ptr_$",
																"typeString": "type(struct MemoryAndStorage.User storage pointer)"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "257:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$13_memory_ptr",
															"typeString": "struct MemoryAndStorage.User memory"
														}
													},
													"src": "245:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$13_storage",
														"typeString": "struct MemoryAndStorage.User storage ref"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "245:29:0"
											}
										]
									},
									"functionSelector": "e00c04ac",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addUser",
									"nameLocation": "196:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "209:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "218:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "213:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:23:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:0:0"
									},
									"scope": 65,
									"src": "187:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "343:82:0",
										"statements": [
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "367:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "355:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$13_memory_ptr",
															"typeString": "struct MemoryAndStorage.User"
														},
														"typeName": {
															"id": 38,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 37,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 13,
																"src": "355:4:0"
															},
															"referencedDeclaration": 13,
															"src": "355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$13_storage_ptr",
																"typeString": "struct MemoryAndStorage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"baseExpression": {
														"id": 40,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "374:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$13_storage_$",
															"typeString": "mapping(uint256 => struct MemoryAndStorage.User storage ref)"
														}
													},
													"id": 42,
													"indexExpression": {
														"id": 41,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "380:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "374:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$13_storage",
														"typeString": "struct MemoryAndStorage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "355:28:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 44,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "395:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$13_memory_ptr",
																"typeString": "struct MemoryAndStorage.User memory"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "395:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "395:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "395:22:0"
											}
										]
									},
									"functionSelector": "58453fef",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBalance",
									"nameLocation": "299:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "318:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "327:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "322:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:23:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:0"
									},
									"scope": 65,
									"src": "290:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "489:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 58,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$13_storage_$",
																"typeString": "mapping(uint256 => struct MemoryAndStorage.User storage ref)"
															}
														},
														"id": 60,
														"indexExpression": {
															"id": 59,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "513:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "507:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$13_storage",
															"typeString": "struct MemoryAndStorage.User storage ref"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 12,
													"src": "507:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 62,
												"nodeType": "Return",
												"src": "500:24:0"
											}
										]
									},
									"functionSelector": "1e010439",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "442:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "458:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:9:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:6:0"
									},
									"scope": 65,
									"src": "433:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 66,
							"src": "27:510:0",
							"usedErrors": []
						}
					],
					"src": "0:539:0"
				},
				"id": 0
			}
		}
	}
}