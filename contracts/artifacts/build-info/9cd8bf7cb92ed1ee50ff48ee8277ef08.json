{
	"id": "9cd8bf7cb92ed1ee50ff48ee8277ef08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\nimport \"./Ownable.sol\";\r\n\r\n\r\n/**\r\n * @title Whitelist\r\n * @author Alberto Cuesta Canada\r\n * @dev Implements a simple whitelist of addresses.\r\n */\r\ncontract Whitelist is Ownable {\r\n    event MemberAdded(address member);\r\n    event MemberRemoved(address member);\r\n\r\n    mapping (address => bool) members;\r\n\r\n    /**\r\n     * @dev The contract constructor.\r\n     */\r\n    constructor() Ownable() {\r\n    }\r\n\r\n    /**\r\n     * @dev A method to verify whether an address is a member of the whitelist\r\n     * @param _member The address to verify.\r\n     * @return Whether the address is a member of the whitelist.\r\n     */\r\n    function isMember(address _member)\r\n        public\r\n        view\r\n        returns(bool)\r\n    {\r\n        return members[_member];\r\n    }\r\n\r\n    /**\r\n     * @dev A method to add a member to the whitelist\r\n     * @param _member The member to add as a member.\r\n     */\r\n    function addMember(address _member)\r\n        public\r\n        payable\r\n        onlyOwner\r\n    {\r\n        require(\r\n            !isMember(_member),\r\n            \"Address is member already.\"\r\n        );\r\n\r\n        members[_member] = true;\r\n        emit MemberAdded(_member);\r\n    }\r\n\r\n    /**\r\n     * @dev A method to remove a member from the whitelist\r\n     * @param _member The member to remove as a member.\r\n     */\r\n    function removeMember(address _member)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(\r\n            isMember(_member),\r\n            \"Not member of whitelist.\"\r\n        );\r\n\r\n        delete members[_member];\r\n        emit MemberRemoved(_member);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\ncontract Ownable{\r\n\r\n    //State variable(s)\r\n    address internal owner; //example using internal instead of private\r\n\r\n    //Modifier(s) is/are for restricting permissions like \"only employees\", \"admins\", or \"owner\" etc...\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);  \r\n        _;\r\n    }\r\n\r\n    // Constructor to initialize var\r\n    constructor(){\r\n        owner = msg.sender; \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":60:470  contract Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Ownable.sol\":416:467  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":448:458  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":440:445  owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":440:458  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":60:470  contract Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":60:470  contract Ownable{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203bfbdab98cbe55f72b6b6b2f2ea0f017846ae9c370a201665a7e3793cd4abe7f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea26469706673582212203bfbdab98cbe55f72b6b6b2f2ea0f017846ae9c370a201665a7e3793cd4abe7f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xFB 0xDA 0xB9 DUP13 0xBE SSTORE 0xF7 0x2B PUSH12 0x6B2F2EA0F017846AE9C370A2 ADD PUSH7 0x5A7E3793CD4ABE PUSH32 0x64736F6C634300080D0033000000000000000000000000000000000000000000 ",
							"sourceMap": "60:410:0:-:0;;;416:51;;;;;;;;;;448:10;440:5;;:18;;;;;;;;;;;;;;;;;;60:410;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203bfbdab98cbe55f72b6b6b2f2ea0f017846ae9c370a201665a7e3793cd4abe7f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xFB 0xDA 0xB9 DUP13 0xBE SSTORE 0xF7 0x2B PUSH12 0x6B2F2EA0F017846AE9C370A2 ADD PUSH7 0x5A7E3793CD4ABE PUSH32 0x64736F6C634300080D0033000000000000000000000000000000000000000000 ",
							"sourceMap": "60:410:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 416,
									"end": 467,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 416,
									"end": 467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 416,
									"end": 467,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 448,
									"end": 458,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 440,
									"end": 445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 470,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203bfbdab98cbe55f72b6b6b2f2ea0f017846ae9c370a201665a7e3793cd4abe7f64736f6c634300080d0033",
									".code": [
										{
											"begin": 60,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 470,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x87db9df0057cbed9ee5b974ba3c75af7c6955d708588f3ea006c8015fcade523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637012b6fe8d21a6eb1c625feac4a6b2223372d7db7c1013bea59ae6335edcc2\",\"dweb:/ipfs/QmT4cc1kf2YaecE9ssXSH483pnJgfvgswJJ9H193HasVNv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Whitelist.sol": {
				"Whitelist": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "MemberAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "MemberRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "addMember",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "isMember",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "removeMember",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Alberto Cuesta Canada",
						"details": "Implements a simple whitelist of addresses.",
						"kind": "dev",
						"methods": {
							"addMember(address)": {
								"details": "A method to add a member to the whitelist",
								"params": {
									"_member": "The member to add as a member."
								}
							},
							"constructor": {
								"details": "The contract constructor."
							},
							"isMember(address)": {
								"details": "A method to verify whether an address is a member of the whitelist",
								"params": {
									"_member": "The address to verify."
								},
								"returns": {
									"_0": "Whether the address is a member of the whitelist."
								}
							},
							"removeMember(address)": {
								"details": "A method to remove a member from the whitelist",
								"params": {
									"_member": "The member to remove as a member."
								}
							}
						},
						"title": "Whitelist",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Whitelist.sol\":205:1632  contract Whitelist is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Whitelist.sol\":425:457  constructor() Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Ownable.sol\":448:458  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":440:445  owner */\n  0x00\n  dup1\n    /* \"contracts/Ownable.sol\":440:458  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Whitelist.sol\":205:1632  contract Whitelist is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Whitelist.sol\":205:1632  contract Whitelist is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0b1ca49a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa230c524\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xca6d56dc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Whitelist.sol\":1366:1629  function removeMember(address _member)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Whitelist.sol\":675:810  function isMember(address _member)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Whitelist.sol\":945:1223  function addMember(address _member)... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Whitelist.sol\":1366:1629  function removeMember(address _member)... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":342:347  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":328:347  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":328:338  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":328:347  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":320:348  require(msg.sender == owner) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/Whitelist.sol\":1478:1495  isMember(_member) */\n      tag_22\n        /* \"contracts/Whitelist.sol\":1487:1494  _member */\n      dup2\n        /* \"contracts/Whitelist.sol\":1478:1486  isMember */\n      tag_13\n        /* \"contracts/Whitelist.sol\":1478:1495  isMember(_member) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/Whitelist.sol\":1456:1547  require(... */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/Whitelist.sol\":1567:1574  members */\n      0x01\n        /* \"contracts/Whitelist.sol\":1567:1583  members[_member] */\n      0x00\n        /* \"contracts/Whitelist.sol\":1575:1582  _member */\n      dup3\n        /* \"contracts/Whitelist.sol\":1567:1583  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Whitelist.sol\":1560:1583  delete members[_member] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/Whitelist.sol\":1599:1621  MemberRemoved(_member) */\n      0x6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de684492\n        /* \"contracts/Whitelist.sol\":1613:1620  _member */\n      dup2\n        /* \"contracts/Whitelist.sol\":1599:1621  MemberRemoved(_member) */\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Whitelist.sol\":1366:1629  function removeMember(address _member)... */\n      pop\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":675:810  function isMember(address _member)... */\n    tag_13:\n        /* \"contracts/Whitelist.sol\":757:761  bool */\n      0x00\n        /* \"contracts/Whitelist.sol\":786:793  members */\n      0x01\n        /* \"contracts/Whitelist.sol\":786:802  members[_member] */\n      0x00\n        /* \"contracts/Whitelist.sol\":794:801  _member */\n      dup4\n        /* \"contracts/Whitelist.sol\":786:802  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Whitelist.sol\":779:802  return members[_member] */\n      swap1\n      pop\n        /* \"contracts/Whitelist.sol\":675:810  function isMember(address _member)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Whitelist.sol\":945:1223  function addMember(address _member)... */\n    tag_18:\n        /* \"contracts/Ownable.sol\":342:347  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":328:347  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":328:338  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":328:347  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":320:348  require(msg.sender == owner) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/Whitelist.sol\":1072:1089  isMember(_member) */\n      tag_32\n        /* \"contracts/Whitelist.sol\":1081:1088  _member */\n      dup2\n        /* \"contracts/Whitelist.sol\":1072:1080  isMember */\n      tag_13\n        /* \"contracts/Whitelist.sol\":1072:1089  isMember(_member) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Whitelist.sol\":1071:1089  !isMember(_member) */\n      iszero\n        /* \"contracts/Whitelist.sol\":1049:1143  require(... */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"contracts/Whitelist.sol\":1175:1179  true */\n      0x01\n        /* \"contracts/Whitelist.sol\":1156:1163  members */\n      dup1\n        /* \"contracts/Whitelist.sol\":1156:1172  members[_member] */\n      0x00\n        /* \"contracts/Whitelist.sol\":1164:1171  _member */\n      dup4\n        /* \"contracts/Whitelist.sol\":1156:1172  members[_member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Whitelist.sol\":1156:1179  members[_member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Whitelist.sol\":1195:1215  MemberAdded(_member) */\n      0xb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914\n        /* \"contracts/Whitelist.sol\":1207:1214  _member */\n      dup2\n        /* \"contracts/Whitelist.sol\":1195:1215  MemberAdded(_member) */\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Whitelist.sol\":945:1223  function addMember(address _member)... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_38:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_40:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_41:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_58\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_40\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_42:\n        /* \"#utility.yul\":641:665   */\n      tag_60\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_41\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_61:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_43:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_63\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_42\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_66\n      tag_38\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":917:1036   */\n    tag_65:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_67\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_43\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_44:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_45:\n        /* \"#utility.yul\":1353:1374   */\n      tag_70\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_15:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_72\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_45\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1772   */\n    tag_46:\n        /* \"#utility.yul\":1687:1698   */\n      0x00\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1716:1719   */\n      dup3\n        /* \"#utility.yul\":1709:1728   */\n      mstore\n        /* \"#utility.yul\":1761:1765   */\n      0x20\n        /* \"#utility.yul\":1756:1759   */\n      dup3\n        /* \"#utility.yul\":1752:1766   */\n      add\n        /* \"#utility.yul\":1737:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1778:1952   */\n    tag_47:\n        /* \"#utility.yul\":1918:1944   */\n      0x4e6f74206d656d626572206f662077686974656c6973742e0000000000000000\n        /* \"#utility.yul\":1914:1915   */\n      0x00\n        /* \"#utility.yul\":1906:1912   */\n      dup3\n        /* \"#utility.yul\":1902:1916   */\n      add\n        /* \"#utility.yul\":1895:1945   */\n      mstore\n        /* \"#utility.yul\":1778:1952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2324   */\n    tag_48:\n        /* \"#utility.yul\":2100:2103   */\n      0x00\n        /* \"#utility.yul\":2121:2188   */\n      tag_76\n        /* \"#utility.yul\":2185:2187   */\n      0x18\n        /* \"#utility.yul\":2180:2183   */\n      dup4\n        /* \"#utility.yul\":2121:2188   */\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2114:2188   */\n      swap2\n      pop\n        /* \"#utility.yul\":2197:2290   */\n      tag_77\n        /* \"#utility.yul\":2286:2289   */\n      dup3\n        /* \"#utility.yul\":2197:2290   */\n      tag_47\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2315:2317   */\n      0x20\n        /* \"#utility.yul\":2310:2313   */\n      dup3\n        /* \"#utility.yul\":2306:2318   */\n      add\n        /* \"#utility.yul\":2299:2318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1958:2324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2330:2749   */\n    tag_25:\n        /* \"#utility.yul\":2496:2500   */\n      0x00\n        /* \"#utility.yul\":2534:2536   */\n      0x20\n        /* \"#utility.yul\":2523:2532   */\n      dup3\n        /* \"#utility.yul\":2519:2537   */\n      add\n        /* \"#utility.yul\":2511:2537   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2592   */\n      dup2\n        /* \"#utility.yul\":2577:2581   */\n      dup2\n        /* \"#utility.yul\":2573:2593   */\n      sub\n        /* \"#utility.yul\":2569:2570   */\n      0x00\n        /* \"#utility.yul\":2558:2567   */\n      dup4\n        /* \"#utility.yul\":2554:2571   */\n      add\n        /* \"#utility.yul\":2547:2594   */\n      mstore\n        /* \"#utility.yul\":2611:2742   */\n      tag_79\n        /* \"#utility.yul\":2737:2741   */\n      dup2\n        /* \"#utility.yul\":2611:2742   */\n      tag_48\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2603:2742   */\n      swap1\n      pop\n        /* \"#utility.yul\":2330:2749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2755:2873   */\n    tag_49:\n        /* \"#utility.yul\":2842:2866   */\n      tag_81\n        /* \"#utility.yul\":2860:2865   */\n      dup2\n        /* \"#utility.yul\":2842:2866   */\n      tag_41\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2837:2840   */\n      dup3\n        /* \"#utility.yul\":2830:2867   */\n      mstore\n        /* \"#utility.yul\":2755:2873   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2879:3101   */\n    tag_27:\n        /* \"#utility.yul\":2972:2976   */\n      0x00\n        /* \"#utility.yul\":3010:3012   */\n      0x20\n        /* \"#utility.yul\":2999:3008   */\n      dup3\n        /* \"#utility.yul\":2995:3013   */\n      add\n        /* \"#utility.yul\":2987:3013   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3094   */\n      tag_83\n        /* \"#utility.yul\":3091:3092   */\n      0x00\n        /* \"#utility.yul\":3080:3089   */\n      dup4\n        /* \"#utility.yul\":3076:3093   */\n      add\n        /* \"#utility.yul\":3067:3073   */\n      dup5\n        /* \"#utility.yul\":3023:3094   */\n      tag_49\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2879:3101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3283   */\n    tag_50:\n        /* \"#utility.yul\":3247:3275   */\n      0x41646472657373206973206d656d62657220616c72656164792e000000000000\n        /* \"#utility.yul\":3243:3244   */\n      0x00\n        /* \"#utility.yul\":3235:3241   */\n      dup3\n        /* \"#utility.yul\":3231:3245   */\n      add\n        /* \"#utility.yul\":3224:3276   */\n      mstore\n        /* \"#utility.yul\":3107:3283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3289:3655   */\n    tag_51:\n        /* \"#utility.yul\":3431:3434   */\n      0x00\n        /* \"#utility.yul\":3452:3519   */\n      tag_86\n        /* \"#utility.yul\":3516:3518   */\n      0x1a\n        /* \"#utility.yul\":3511:3514   */\n      dup4\n        /* \"#utility.yul\":3452:3519   */\n      tag_46\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3445:3519   */\n      swap2\n      pop\n        /* \"#utility.yul\":3528:3621   */\n      tag_87\n        /* \"#utility.yul\":3617:3620   */\n      dup3\n        /* \"#utility.yul\":3528:3621   */\n      tag_50\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3646:3648   */\n      0x20\n        /* \"#utility.yul\":3641:3644   */\n      dup3\n        /* \"#utility.yul\":3637:3649   */\n      add\n        /* \"#utility.yul\":3630:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3289:3655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3661:4080   */\n    tag_35:\n        /* \"#utility.yul\":3827:3831   */\n      0x00\n        /* \"#utility.yul\":3865:3867   */\n      0x20\n        /* \"#utility.yul\":3854:3863   */\n      dup3\n        /* \"#utility.yul\":3850:3868   */\n      add\n        /* \"#utility.yul\":3842:3868   */\n      swap1\n      pop\n        /* \"#utility.yul\":3914:3923   */\n      dup2\n        /* \"#utility.yul\":3908:3912   */\n      dup2\n        /* \"#utility.yul\":3904:3924   */\n      sub\n        /* \"#utility.yul\":3900:3901   */\n      0x00\n        /* \"#utility.yul\":3889:3898   */\n      dup4\n        /* \"#utility.yul\":3885:3902   */\n      add\n        /* \"#utility.yul\":3878:3925   */\n      mstore\n        /* \"#utility.yul\":3942:4073   */\n      tag_89\n        /* \"#utility.yul\":4068:4072   */\n      dup2\n        /* \"#utility.yul\":3942:4073   */\n      tag_51\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3934:4073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3661:4080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fe3a80eeeee26001a9803bc59997d0a8b9a013bd279daef15ba4f106ce08d1764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_49": {
									"entryPoint": null,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061057b806100606000396000f3fe6080604052600436106100345760003560e01c80630b1ca49a14610039578063a230c52414610062578063ca6d56dc1461009f575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906103cf565b6100bb565b005b34801561006e57600080fd5b50610089600480360381019061008491906103cf565b6101e4565b6040516100969190610417565b60405180910390f35b6100b960048036038101906100b491906103cf565b61023a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b61011c816101e4565b61015b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101529061048f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690557f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de684492816040516101d991906104be565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029257600080fd5b61029b816101e4565b156102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610525565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd9148160405161036191906104be565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039c82610371565b9050919050565b6103ac81610391565b81146103b757600080fd5b50565b6000813590506103c9816103a3565b92915050565b6000602082840312156103e5576103e461036c565b5b60006103f3848285016103ba565b91505092915050565b60008115159050919050565b610411816103fc565b82525050565b600060208201905061042c6000830184610408565b92915050565b600082825260208201905092915050565b7f4e6f74206d656d626572206f662077686974656c6973742e0000000000000000600082015250565b6000610479601883610432565b915061048482610443565b602082019050919050565b600060208201905081810360008301526104a88161046c565b9050919050565b6104b881610391565b82525050565b60006020820190506104d360008301846104af565b92915050565b7f41646472657373206973206d656d62657220616c72656164792e000000000000600082015250565b600061050f601a83610432565b915061051a826104d9565b602082019050919050565b6000602082019050818103600083015261053e81610502565b905091905056fea26469706673582212205fe3a80eeeee26001a9803bc59997d0a8b9a013bd279daef15ba4f106ce08d1764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x57B DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C DUP2 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0x6E76FB4C77256006D9C38EC7D82B45A8C8F3C27B1D6766FFFC42DFB8DE684492 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x1E4 JUMP JUMPDEST ISZERO PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2 SWAP1 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB251EB052AFC73FFD02FFE85AD79990A8B3FED60D76DBC2FA2FDD7123DFFD914 DUP2 PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x391 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C9 DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E4 PUSH2 0x36C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP5 DUP3 DUP6 ADD PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x411 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206D656D626572206F662077686974656C6973742E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH1 0x18 DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x484 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A8 DUP2 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B8 DUP2 PUSH2 0x391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206D656D62657220616C72656164792E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F PUSH1 0x1A DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x51A DUP3 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53E DUP2 PUSH2 0x502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xE3 0xA8 0xE 0xEE 0xEE 0x26 STOP BYTE SWAP9 SUB 0xBC MSIZE SWAP10 PUSH30 0xA8B9A013BD279DAEF15BA4F106CE08D1764736F6C634300080D00330000 ",
							"sourceMap": "205:1427:1:-:0;;;425:32;;;;;;;;;;448:10:0;440:5;;:18;;;;;;;;;;;;;;;;;;205:1427:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addMember_89": {
									"entryPoint": 570,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isMember_62": {
									"entryPoint": 484,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeMember_114": {
									"entryPoint": 187,
									"id": 114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4083:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:2"
															},
															"nodeType": "YulIf",
															"src": "917:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:2",
														"type": ""
													}
												],
												"src": "841:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:2",
														"type": ""
													}
												],
												"src": "1176:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:2",
														"type": ""
													}
												],
												"src": "1272:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:2",
														"type": ""
													}
												],
												"src": "1387:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1699:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1716:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1737:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1756:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1752:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1737:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1676:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1687:11:2",
														"type": ""
													}
												],
												"src": "1603:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1884:68:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:14:2"
																	},
																	{
																		"hexValue": "4e6f74206d656d626572206f662077686974656c6973742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1918:26:2",
																		"type": "",
																		"value": "Not member of whitelist."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1895:50:2"
														}
													]
												},
												"name": "store_literal_in_memory_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1876:6:2",
														"type": ""
													}
												],
												"src": "1778:174:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2104:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2114:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2180:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2185:2:2",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2121:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261",
																	"nodeType": "YulIdentifier",
																	"src": "2197:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2197:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2299:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2310:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2315:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2092:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2100:3:2",
														"type": ""
													}
												],
												"src": "1958:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2511:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2523:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2534:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2519:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2511:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2558:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2569:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2554:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2554:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2577:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2583:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2547:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2603:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2737:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2611:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2603:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2481:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2496:4:2",
														"type": ""
													}
												],
												"src": "2330:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2837:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2860:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2842:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2808:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2815:3:2",
														"type": ""
													}
												],
												"src": "2755:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2977:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2987:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2999:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2987:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3080:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3091:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3023:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2949:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2961:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2972:4:2",
														"type": ""
													}
												],
												"src": "2879:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:70:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:14:2"
																	},
																	{
																		"hexValue": "41646472657373206973206d656d62657220616c72656164792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3247:28:2",
																		"type": "",
																		"value": "Address is member already."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:52:2"
														}
													]
												},
												"name": "store_literal_in_memory_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3205:6:2",
														"type": ""
													}
												],
												"src": "3107:176:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3435:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3445:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3511:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3516:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3452:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3445:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3617:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba",
																	"nodeType": "YulIdentifier",
																	"src": "3528:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3630:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3641:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3646:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3423:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3431:3:2",
														"type": ""
													}
												],
												"src": "3289:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3832:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3842:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3854:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3842:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3889:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3900:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3885:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3885:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3908:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3878:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3878:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3878:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3934:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4068:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3942:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3934:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3812:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3827:4:2",
														"type": ""
													}
												],
												"src": "3661:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not member of whitelist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is member already.\")\n\n    }\n\n    function abi_encode_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80630b1ca49a14610039578063a230c52414610062578063ca6d56dc1461009f575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906103cf565b6100bb565b005b34801561006e57600080fd5b50610089600480360381019061008491906103cf565b6101e4565b6040516100969190610417565b60405180910390f35b6100b960048036038101906100b491906103cf565b61023a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011357600080fd5b61011c816101e4565b61015b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101529061048f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690557f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de684492816040516101d991906104be565b60405180910390a150565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029257600080fd5b61029b816101e4565b156102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610525565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd9148160405161036191906104be565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039c82610371565b9050919050565b6103ac81610391565b81146103b757600080fd5b50565b6000813590506103c9816103a3565b92915050565b6000602082840312156103e5576103e461036c565b5b60006103f3848285016103ba565b91505092915050565b60008115159050919050565b610411816103fc565b82525050565b600060208201905061042c6000830184610408565b92915050565b600082825260208201905092915050565b7f4e6f74206d656d626572206f662077686974656c6973742e0000000000000000600082015250565b6000610479601883610432565b915061048482610443565b602082019050919050565b600060208201905081810360008301526104a88161046c565b9050919050565b6104b881610391565b82525050565b60006020820190506104d360008301846104af565b92915050565b7f41646472657373206973206d656d62657220616c72656164792e000000000000600082015250565b600061050f601a83610432565b915061051a826104d9565b602082019050919050565b6000602082019050818103600083015261053e81610502565b905091905056fea26469706673582212205fe3a80eeeee26001a9803bc59997d0a8b9a013bd279daef15ba4f106ce08d1764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1CA49A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xA230C524 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xCA6D56DC EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x23A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C DUP2 PUSH2 0x1E4 JUMP JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0x6E76FB4C77256006D9C38EC7D82B45A8C8F3C27B1D6766FFFC42DFB8DE684492 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x1E4 JUMP JUMPDEST ISZERO PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2 SWAP1 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB251EB052AFC73FFD02FFE85AD79990A8B3FED60D76DBC2FA2FDD7123DFFD914 DUP2 PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x391 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C9 DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E4 PUSH2 0x36C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP5 DUP3 DUP6 ADD PUSH2 0x3BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x411 DUP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x42C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206D656D626572206F662077686974656C6973742E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH1 0x18 DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x484 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A8 DUP2 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B8 DUP2 PUSH2 0x391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373206973206D656D62657220616C72656164792E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50F PUSH1 0x1A DUP4 PUSH2 0x432 JUMP JUMPDEST SWAP2 POP PUSH2 0x51A DUP3 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53E DUP2 PUSH2 0x502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xE3 0xA8 0xE 0xEE 0xEE 0x26 STOP BYTE SWAP9 SUB 0xBC MSIZE SWAP10 PUSH30 0xA8B9A013BD279DAEF15BA4F106CE08D1764736F6C634300080D00330000 ",
							"sourceMap": "205:1427:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;675:135;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;945:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1366:263;342:5:0;;;;;;;;;;328:19;;:10;:19;;;320:28;;;;;;1478:17:1::1;1487:7;1478:8;:17::i;:::-;1456:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1567:7;:16;1575:7;1567:16;;;;;;;;;;;;;;;;1560:23;;;;;;;;;;;1599:22;1613:7;1599:22;;;;;;:::i;:::-;;;;;;;;1366:263:::0;:::o;675:135::-;757:4;786:7;:16;794:7;786:16;;;;;;;;;;;;;;;;;;;;;;;;;779:23;;675:135;;;:::o;945:278::-;342:5:0;;;;;;;;;;328:19;;:10;:19;;;320:28;;;;;;1072:17:1::1;1081:7;1072:8;:17::i;:::-;1071:18;1049:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1175:4;1156:7:::0;:16:::1;1164:7;1156:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1195:20;1207:7;1195:20;;;;;;:::i;:::-;;;;;;;;945:278:::0;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:169::-;1687:11;1721:6;1716:3;1709:19;1761:4;1756:3;1752:14;1737:29;;1603:169;;;;:::o;1778:174::-;1918:26;1914:1;1906:6;1902:14;1895:50;1778:174;:::o;1958:366::-;2100:3;2121:67;2185:2;2180:3;2121:67;:::i;:::-;2114:74;;2197:93;2286:3;2197:93;:::i;:::-;2315:2;2310:3;2306:12;2299:19;;1958:366;;;:::o;2330:419::-;2496:4;2534:2;2523:9;2519:18;2511:26;;2583:9;2577:4;2573:20;2569:1;2558:9;2554:17;2547:47;2611:131;2737:4;2611:131;:::i;:::-;2603:139;;2330:419;;;:::o;2755:118::-;2842:24;2860:5;2842:24;:::i;:::-;2837:3;2830:37;2755:118;;:::o;2879:222::-;2972:4;3010:2;2999:9;2995:18;2987:26;;3023:71;3091:1;3080:9;3076:17;3067:6;3023:71;:::i;:::-;2879:222;;;;:::o;3107:176::-;3247:28;3243:1;3235:6;3231:14;3224:52;3107:176;:::o;3289:366::-;3431:3;3452:67;3516:2;3511:3;3452:67;:::i;:::-;3445:74;;3528:93;3617:3;3528:93;:::i;:::-;3646:2;3641:3;3637:12;3630:19;;3289:366;;;:::o;3661:419::-;3827:4;3865:2;3854:9;3850:18;3842:26;;3914:9;3908:4;3904:20;3900:1;3889:9;3885:17;3878:47;3942:131;4068:4;3942:131;:::i;:::-;3934:139;;3661:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "280600",
								"executionCost": "24584",
								"totalCost": "305184"
							},
							"external": {
								"addMember(address)": "infinite",
								"isMember(address)": "2883",
								"removeMember(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 457,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 457,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 425,
									"end": 457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 458,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 440,
									"end": 445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 445,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 440,
									"end": 458,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 1632,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fe3a80eeeee26001a9803bc59997d0a8b9a013bd279daef15ba4f106ce08d1764736f6c634300080d0033",
									".code": [
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "B1CA49A"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "A230C524"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "CA6D56DC"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 1632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 338,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1583,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "6E76FB4C77256006D9C38EC7D82B45A8C8F3C27B1D6766FFFC42DFB8DE684492"
										},
										{
											"begin": 1613,
											"end": 1620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1621,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1629,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 786,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 786,
											"end": 802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 779,
											"end": 802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 779,
											"end": 802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 675,
											"end": 810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 342,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 338,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 328,
											"end": 347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 320,
											"end": 348,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 320,
											"end": 348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1072,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1049,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "B251EB052AFC73FFD02FFE85AD79990A8B3FED60D76DBC2FA2FDD7123DFFD914"
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1215,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1772,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1778,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1778,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1944,
											"name": "PUSH",
											"source": 2,
											"value": "4E6F74206D656D626572206F662077686974656C6973742E0000000000000000"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1916,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1952,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2121,
											"end": 2188,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2188,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2121,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2286,
											"end": 2289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2197,
											"end": 2290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2197,
											"end": 2290,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2197,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2317,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 2324,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2523,
											"end": 2532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2592,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2593,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2571,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2737,
											"end": 2741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2611,
											"end": 2742,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 2742,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2749,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2873,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2755,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2842,
											"end": 2866,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2866,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2842,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2837,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2873,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3107,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3275,
											"name": "PUSH",
											"source": 2,
											"value": "41646472657373206973206D656D62657220616C72656164792E000000000000"
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3283,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3516,
											"end": 3518,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3511,
											"end": 3514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3452,
											"end": 3519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3452,
											"end": 3519,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3452,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3519,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3617,
											"end": 3620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3528,
											"end": 3621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3621,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3528,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3646,
											"end": 3648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3655,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4068,
											"end": 4072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3942,
											"end": 4073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3942,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3942,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 4073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 4080,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addMember(address)": "ca6d56dc",
							"isMember(address)": "a230c524",
							"removeMember(address)": "0b1ca49a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alberto Cuesta Canada\",\"details\":\"Implements a simple whitelist of addresses.\",\"kind\":\"dev\",\"methods\":{\"addMember(address)\":{\"details\":\"A method to add a member to the whitelist\",\"params\":{\"_member\":\"The member to add as a member.\"}},\"constructor\":{\"details\":\"The contract constructor.\"},\"isMember(address)\":{\"details\":\"A method to verify whether an address is a member of the whitelist\",\"params\":{\"_member\":\"The address to verify.\"},\"returns\":{\"_0\":\"Whether the address is a member of the whitelist.\"}},\"removeMember(address)\":{\"details\":\"A method to remove a member from the whitelist\",\"params\":{\"_member\":\"The member to remove as a member.\"}}},\"title\":\"Whitelist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x87db9df0057cbed9ee5b974ba3c75af7c6955d708588f3ea006c8015fcade523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://637012b6fe8d21a6eb1c625feac4a6b2223372d7db7c1013bea59ae6335edcc2\",\"dweb:/ipfs/QmT4cc1kf2YaecE9ssXSH483pnJgfvgswJJ9H193HasVNv\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0x38944db664ea40233a86621962e94edd9ceda45aa324733f81d2987463539958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c3186ebb3d26ee22074591738da8d74a709f6cffc5aad46b42fcd79d5fdfec9\",\"dweb:/ipfs/QmZfoH1NM5JSzMGK5EjUtppe5A9sUK4tTCyFM93rnMTHcW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 42,
								"contract": "contracts/Whitelist.sol:Whitelist",
								"label": "members",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Ownable",
							"nameLocation": "69:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "127:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "110:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "110:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "309:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "328:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "328:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 8,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "342:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "328:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "320:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "320:28:0"
											},
											{
												"id": 12,
												"nodeType": "PlaceholderStatement",
												"src": "361:1:0"
											}
										]
									},
									"id": 14,
									"name": "onlyOwner",
									"nameLocation": "299:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:0"
									},
									"src": "290:80:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "429:38:0",
										"statements": [
											{
												"expression": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "440:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "448:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "448:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "440:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "440:18:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:0"
									},
									"scope": 24,
									"src": "416:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 25,
							"src": "60:410:0",
							"usedErrors": []
						}
					],
					"src": "33:437:0"
				},
				"id": 0
			},
			"contracts/Whitelist.sol": {
				"ast": {
					"absolutePath": "contracts/Whitelist.sol",
					"exportedSymbols": {
						"Ownable": [
							24
						],
						"Whitelist": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 25,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 29,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "227:7:1"
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "227:7:1"
								}
							],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 28,
								"nodeType": "StructuredDocumentation",
								"src": "87:116:1",
								"text": " @title Whitelist\n @author Alberto Cuesta Canada\n @dev Implements a simple whitelist of addresses."
							},
							"fullyImplemented": true,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								24
							],
							"name": "Whitelist",
							"nameLocation": "214:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914",
									"id": 34,
									"name": "MemberAdded",
									"nameLocation": "248:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "260:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:16:1"
									},
									"src": "242:34:1"
								},
								{
									"anonymous": false,
									"eventSelector": "6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de684492",
									"id": 38,
									"name": "MemberRemoved",
									"nameLocation": "288:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "310:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "302:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:16:1"
									},
									"src": "282:36:1"
								},
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "352:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 115,
									"src": "326:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "335:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "326:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 40,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "346:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "449:8:1",
										"statements": []
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "368:51:1",
										"text": " @dev The contract constructor."
									},
									"id": 49,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 46,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 45,
												"name": "Ownable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "439:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "439:9:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:0:1"
									},
									"scope": 115,
									"src": "425:32:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "768:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 57,
														"name": "members",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "786:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 59,
													"indexExpression": {
														"id": 58,
														"name": "_member",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "786:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 56,
												"id": 60,
												"nodeType": "Return",
												"src": "779:23:1"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "465:204:1",
										"text": " @dev A method to verify whether an address is a member of the whitelist\n @param _member The address to verify.\n @return Whether the address is a member of the whitelist."
									},
									"functionSelector": "a230c524",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMember",
									"nameLocation": "684:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "701:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "693:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:17:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "757:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:6:1"
									},
									"scope": 115,
									"src": "675:135:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1038:185:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1071:18:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 72,
																		"name": "_member",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "1081:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 71,
																	"name": "isMember",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "1072:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1072:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206973206d656d62657220616c72656164792e",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1104:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba",
																"typeString": "literal_string \"Address is member already.\""
															},
															"value": "Address is member already."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deca3303862bcee891d65a47b75bf2c1cb362116cd7e0671ef6cf4fa84aafbba",
																"typeString": "literal_string \"Address is member already.\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1049:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:94:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1049:94:1"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 78,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 80,
														"indexExpression": {
															"id": 79,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "1164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1156:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1156:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1156:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 85,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "1207:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 84,
														"name": "MemberAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1195:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "EmitStatement",
												"src": "1190:25:1"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "818:121:1",
										"text": " @dev A method to add a member to the whitelist\n @param _member The member to add as a member."
									},
									"functionSelector": "ca6d56dc",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 68,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 67,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "1023:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:9:1"
										}
									],
									"name": "addMember",
									"nameLocation": "954:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "972:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "964:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:17:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:1"
									},
									"scope": 115,
									"src": "945:278:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1445:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 99,
																	"name": "_member",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "1487:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 98,
																"name": "isMember",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1478:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1478:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206d656d626572206f662077686974656c6973742e",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261",
																"typeString": "literal_string \"Not member of whitelist.\""
															},
															"value": "Not member of whitelist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72a672b6c060cd2a644acb700c984dd210facf1a429d411f6cec8beef0306261",
																"typeString": "literal_string \"Not member of whitelist.\""
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1456:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:91:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1456:91:1"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1560:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 104,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1567:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1575:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1567:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1560:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 110,
															"name": "_member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1613:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 109,
														"name": "MemberRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1599:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "EmitStatement",
												"src": "1594:27:1"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "1231:129:1",
										"text": " @dev A method to remove a member from the whitelist\n @param _member The member to remove as a member."
									},
									"functionSelector": "0b1ca49a",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 95,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 94,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "1430:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1430:9:1"
										}
									],
									"name": "removeMember",
									"nameLocation": "1375:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "1396:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:17:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:1"
									},
									"scope": 115,
									"src": "1366:263:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 116,
							"src": "205:1427:1",
							"usedErrors": []
						}
					],
					"src": "33:1603:1"
				},
				"id": 1
			}
		}
	}
}