{
	"id": "71f352db3bb169cd1d62fa5bcee64b49",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"SetterFunctions.sol": {
				"content": "pragma solidity 0.8.13;\r\n\r\ncontract SetterFunctions {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SetterFunctions.sol": {
				"SetterFunctions": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SetterFunctions.sol\":27:74  contract SetterFunctions {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SetterFunctions.sol\":27:74  contract SetterFunctions {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844f5aafdf27f5c6905721c8177c55645a79e846dc848b48a365e8f363469a2964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220844f5aafdf27f5c6905721c8177c55645a79e846dc848b48a365e8f363469a2964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4F GAS 0xAF 0xDF 0x27 CREATE2 0xC6 SWAP1 JUMPI 0x21 0xC8 OR PUSH29 0x55645A79E846DC848B48A365E8F363469A2964736F6C634300080D0033 ",
							"sourceMap": "27:47:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220844f5aafdf27f5c6905721c8177c55645a79e846dc848b48a365e8f363469a2964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4F GAS 0xAF 0xDF 0x27 CREATE2 0xC6 SWAP1 JUMPI 0x21 0xC8 OR PUSH29 0x55645A79E846DC848B48A365E8F363469A2964736F6C634300080D0033 ",
							"sourceMap": "27:47:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 74,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 74,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844f5aafdf27f5c6905721c8177c55645a79e846dc848b48a365e8f363469a2964736f6c634300080d0033",
									".code": [
										{
											"begin": 27,
											"end": 74,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 74,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 74,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 74,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 74,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 74,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SetterFunctions.sol\":\"SetterFunctions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SetterFunctions.sol\":{\"keccak256\":\"0x5b917d211b6bd5b910c41cdf07625d1929e276c1831d4317875d4e170218cefc\",\"urls\":[\"bzz-raw://b6f5f3827204602f3301e69100efd9e7bd0ae2f94bc00a1dd90a969bbf92017c\",\"dweb:/ipfs/Qma6WGMuA4AVoTQpTfJngdwhaJt4KSKgndsavoeH6zsSxF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SetterFunctions.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SetterFunctions.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SetterFunctions.sol": {
				"ast": {
					"absolutePath": "SetterFunctions.sol",
					"exportedSymbols": {
						"SetterFunctions": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SetterFunctions",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "SetterFunctions",
							"nameLocation": "36:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:47:0",
							"usedErrors": []
						}
					],
					"src": "0:74:0"
				},
				"id": 0
			}
		}
	}
}