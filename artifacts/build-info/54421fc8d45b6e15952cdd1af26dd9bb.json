{
	"id": "54421fc8d45b6e15952cdd1af26dd9bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Loops.sol": {
				"content": "pragma solidity 0.8.13;\r\n//LOOPS\r\n\r\ncontract Execute{}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Loops.sol": {
				"Execute": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Loops.sol\":36:54  contract Execute{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Loops.sol\":36:54  contract Execute{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220656b5197d829646b1d2c6233bc5c01a308f6d3057fc94a5289512d167c9e51b764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220656b5197d829646b1d2c6233bc5c01a308f6d3057fc94a5289512d167c9e51b764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x6B5197D82964 PUSH12 0x1D2C6233BC5C01A308F6D305 PUSH32 0xC94A5289512D167C9E51B764736F6C634300080D003300000000000000000000 ",
							"sourceMap": "36:18:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220656b5197d829646b1d2c6233bc5c01a308f6d3057fc94a5289512d167c9e51b764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x6B5197D82964 PUSH12 0x1D2C6233BC5C01A308F6D305 PUSH32 0xC94A5289512D167C9E51B764736F6C634300080D003300000000000000000000 ",
							"sourceMap": "36:18:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220656b5197d829646b1d2c6233bc5c01a308f6d3057fc94a5289512d167c9e51b764736f6c634300080d0033",
									".code": [
										{
											"begin": 36,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Loops.sol\":\"Execute\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Loops.sol\":{\"keccak256\":\"0xe26cbef7653e20776d823ba1cfaaa1d214242353a1fa7f10e0a8f0f5a1d46595\",\"urls\":[\"bzz-raw://23e100b36f43983f5b2c7f9c3955d2cab4eadf2bb6bd6c8234fed40ad76e7916\",\"dweb:/ipfs/QmSLVxqVhiLeVPJg8PdmtAMkmQ7ayxzYKJcBNzmuCSUKuf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Loops.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Loops.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Loops.sol": {
				"ast": {
					"absolutePath": "Loops.sol",
					"exportedSymbols": {
						"Execute": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Execute",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Execute",
							"nameLocation": "45:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "36:18:0",
							"usedErrors": []
						}
					],
					"src": "0:56:0"
				},
				"id": 0
			}
		}
	}
}