{
	"id": "5a5da021fa6ca4f4136d266d626c5027",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Loops.sol": {
				"content": "pragma solidity 0.8.13;\r\n//LOOPS\r\n\r\ncontract Execute{\r\n\r\n\r\n\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Loops.sol": {
				"Execute": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Loops.sol\":36:68  contract Execute{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Loops.sol\":36:68  contract Execute{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201da962b32b8b3ea45bd31804766e428153a8e26712bba314be1b4d334896046464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201da962b32b8b3ea45bd31804766e428153a8e26712bba314be1b4d334896046464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xA9 PUSH3 0xB32B8B RETURNDATACOPY LOG4 JUMPDEST 0xD3 XOR DIV PUSH23 0x6E428153A8E26712BBA314BE1B4D334896046464736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "36:32:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212201da962b32b8b3ea45bd31804766e428153a8e26712bba314be1b4d334896046464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xA9 PUSH3 0xB32B8B RETURNDATACOPY LOG4 JUMPDEST 0xD3 XOR DIV PUSH23 0x6E428153A8E26712BBA314BE1B4D334896046464736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "36:32:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 68,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 68,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201da962b32b8b3ea45bd31804766e428153a8e26712bba314be1b4d334896046464736f6c634300080d0033",
									".code": [
										{
											"begin": 36,
											"end": 68,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 68,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 68,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 68,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 68,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 68,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Loops.sol\":\"Execute\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Loops.sol\":{\"keccak256\":\"0x2b4e4ebbdcaf268718abd0e5c274a01de72e25f73e5755854b88624f25fc6374\",\"urls\":[\"bzz-raw://eef73b5aa28f284224735541b0bd02ccdf12510b12870cac8f7b7c987e96ed0e\",\"dweb:/ipfs/QmUqVE9EUb8N8DPXXdfsLGTQKbYjiZBQsacsGawT5MeRME\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Loops.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Loops.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Loops.sol": {
				"ast": {
					"absolutePath": "Loops.sol",
					"exportedSymbols": {
						"Execute": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Execute",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Execute",
							"nameLocation": "45:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "36:32:0",
							"usedErrors": []
						}
					],
					"src": "0:70:0"
				},
				"id": 0
			}
		}
	}
}